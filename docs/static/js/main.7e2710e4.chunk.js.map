{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","category","type","value","onChange","target","getGifs","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","original","title","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","c","ReactDOM","render","document","getElementById"],"mappings":"4MAKaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAiB5C,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAQ,OAAKP,GAAL,mBAAoBO,OAC1CN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAlBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,8BCVlBG,EAAO,uCAAG,WAAOL,GAAP,uBAAAM,EAAA,4DAEH,mCAEVC,EAJa,iDAImCC,UAAUR,GAJ7C,6BAEH,oCAFG,SAMAS,MAAMF,GANN,cAMbG,EANa,gBAQIA,EAAKC,OART,uBAQXC,EARW,EAQXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRT,IAAG,UAAEQ,EAAIE,cAAN,aAAE,EAAYC,SAASX,IAC1BY,MAAOJ,EAAII,UAdA,kBAkBZN,GAlBY,4CAAH,sDCEPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBG,EAAgB,EAAhBA,MAAOZ,EAAS,EAATA,IAEpC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKJ,IACpB,4BAAIA,QCFHK,EAAU,SAAC,GAAkB,IAAhBxB,EAAe,EAAfA,SAAe,ECEb,SAACA,GAAc,IAAD,EAEZR,mBAAS,CAC/BoB,KAAM,GACNa,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAqBtC,OAdAC,qBAAU,WACNvB,EAAQL,GACH6B,MAAK,SAAAC,GAGFH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAKtB,CAACzB,IAEG0B,EDpB2BK,CAAa/B,GAAvCyB,EAH6B,EAG7BA,QAAeR,EAHc,EAGpBL,KAEjB,OACI,qCACI,oBAAIS,UAAU,oCAAd,SAAmDrB,IAElDyB,GAAW,mBAAGJ,UAAU,mCAAb,wBAEZ,qBAAKA,UAAU,8CAAf,SAGQJ,EAAOH,KAAI,SAACC,GAAD,OAEP,wBAAC,EAAD,2BACQA,GADR,IAEIiB,IAAKjB,EAAIC,eEetBiB,EAjCM,WAAM,MAGazC,mBAAS,CAAC,WAHvB,mBAGhB0C,EAHgB,KAGJ3C,EAHI,KAavB,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAGA,6BACK2C,EAAWpB,KAAI,SAAAqB,GAAC,OAEb,aADA,CACC,EAAD,CAEInC,SAAUmC,GADLA,YCtB7BC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.7e2710e4.chunk.js","sourcesContent":["//rafc\r\n\r\nimport React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2) {\r\n            setCategories(category => [inputValue, ...category]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    );\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n}\r\n","export const getGifs = async (category) => {\r\n\r\n    const api_key = '0JijOLr1glVVdNYjLEjbBp26R16up6TN';\r\n    // encodeURI elimina los espacios vacios (es de JS)\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=${api_key}`;\r\n\r\n    const resp = await fetch(url);\r\n\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            url: img.images?.original.url,\r\n            title: img.title\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n  \r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}></img>\r\n            <p>{title}</p>\r\n            {/* {img.title} */}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n\r\n    const { loading, data: images } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n            \r\n            {loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\r\n\r\n            <div className=\"card-grid animate__animated animate__fadeIn\">\r\n\r\n                {\r\n                    images.map((img) =>\r\n\r\n                        <GifGridItem\r\n                            {...img}\r\n                            key={img.id}\r\n                        />\r\n                    )\r\n\r\n                }\r\n            </div>\r\n            {/* <button onClick={() => { setCount(count + 1) }}>{count}</button> */}\r\n        </>\r\n    )\r\n}\r\n","//estandar de hook, los nombres deben de empezar en use\r\n//los hooks no son mÃ¡s que funciones\r\n\r\nimport { useState, useEffect } from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(imgs => {\r\n\r\n                // setTimeout(() => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n                // }, 3000);\r\n\r\n            });\r\n    }, [category]);\r\n\r\n    return state;\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    // const categories = ['One Punch', 'Samurai X', 'One Piece'];\r\n    const [categories, setCategories] = useState(['Naruto']);\r\n\r\n    // console.log(categories);\r\n    // const handleAdd = () => {\r\n    //     //cuando se utiliza el set del useState se le cae encima a lo que tiene categories, por eso se debe crear un nuevo arreglo\r\n    //     // setCategories([...categories, 'HxH']);\r\n    //     setCategories(cats => [...cats, 'Hxh']);\r\n\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr />\r\n\r\n            {/* Order list */}\r\n            <ol>\r\n                {categories.map(c =>\r\n                    // <li key={c}>{c}</li>\r\n                    <GifGrid\r\n                        key={c}\r\n                        category={c}\r\n                    />\r\n                )}\r\n            </ol>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}